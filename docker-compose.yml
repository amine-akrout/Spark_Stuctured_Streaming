version: '3.2'

networks: 
  kafka_network: 
    driver: bridge
services: 
  kafka: 
    container_name: kafka
    depends_on: 
      - zookeeper
    environment: 
      KAFKA_ADVERTISED_LISTENERS: "INSIDE://kafka:9093,OUTSIDE://localhost:9092"
      KAFKA_CREATE_TOPICS: my-topic
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: "INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      LOG_DIR: /tmp/logs
    expose: 
      - "9093"
    image: "wurstmeister/kafka:2.12-2.2.2"
    networks: 
      - kafka_network
    ports: 
      - "9092:9092"
  kafka_manager: 
    command: "-Dpidfile.path=/dev/null"
    container_name: kafka_manager
    depends_on: 
      - zookeeper
      - kafka
    environment: 
      APPLICATION_SECRET: random-secret
      ZK_HOSTS: "zookeeper:2181"
    expose: 
      - "9009"
    image: "hlebalbau/kafka-manager:1.3.3.18"
    networks: 
      - kafka_network
    ports: 
      - "9009:9000"
  pgadmin: 
    container_name: pgadmin
    environment: 
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD:-admin}"
    image: dpage/pgadmin4
    networks: 
      - kafka_network
    ports: 
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    volumes: 
      - "./pgadmin:/root/.pgadmin"
  postgres: 
    container_name: postgres
    environment: 
      POSTGRES_DB: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_USER: superset
    expose: 
      - "5432"
    image: postgres
    networks: 
      - kafka_network
    ports: 
      - "5416:5432"
    restart: always
    volumes: 
      - "./postgres:/var/lib/postgresql/data"
  redis: 
    container_name: redis
    image: redis
    networks: 
      - kafka_network
    restart: always
    volumes: 
      - "./redis:/data"
  superset: 
    container_name: superset
    depends_on: 
      - postgres
      - redis
    environment: 
      MAPBOX_API_KEY: "${MAPBOX_API_KEY}"
    image: amancevice/superset
    networks: 
      - kafka_network
    ports: 
      - "8088:8088"
    restart: always
    volumes: 
      - "./superset_config.py:/etc/superset/superset_config.py"
  zookeeper: 
    container_name: zookeeper
    image: wurstmeister/zookeeper
    networks: 
      - kafka_network
    ports: 
      - "2181:2181"
version: "3.2"
volumes: 
  pgadmin: ~
  postgres: ~
  redis: ~